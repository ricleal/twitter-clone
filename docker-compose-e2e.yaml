version: "3.7"
services:
  postgres:
    image: postgres:15.3
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    command: >
      -c ssl=on
      -c ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
      -c ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} --dbname ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 12
    networks:
      - pgdata

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations", 
      "-database", "postgres://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable",
      "-verbose", "up"
      ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pgdata

  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - API_PORT=${API_PORT}
    depends_on:
      migrate:
        condition: service_completed_successfully
    environment:
      DB_URL: "postgres://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable"
      LOG_LEVEL: ${LOG_LEVEL}
      API_PORT: ${API_PORT}
    networks:
      - pgdata
    

  curl:
    image: badouralix/curl-jq:ubuntu
    environment:
      API_PORT: ${API_PORT}
    volumes:
      - ./e2e:/e2e
    depends_on:
      - api
    command: /bin/sh -c "while ! curl -sSf -o /dev/null http://api:${API_PORT}/api/v1/api.json; do sleep 1; done && /e2e/test.sh"
    networks:
      - pgdata
  
  wait:
    image: busybox:1.36.1
    depends_on:
      curl:
        condition: service_completed_successfully
    command: /bin/sh -c "echo 'All tests run!'"
    networks:
      - pgdata

networks:
  pgdata: {}
